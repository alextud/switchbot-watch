name: Build and Deploy Switchbot WatchKit App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15
    timeout-minutes: 20


    env:
      KEYCHAIN_NAME: build.keychain-db

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Show Xcode version
      run: xcodebuild -version

    - name: Prepare keychain
      run: |
        KEYCHAIN_PASSWORD=${{ secrets.KEYCHAIN_PASSWORD }}

        security delete-keychain "$KEYCHAIN_NAME" 2>/dev/null || true
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        security set-keychain-settings -lut 3600 "$KEYCHAIN_NAME" # keep keychain open for 1 hour
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        security list-keychains -d user -s "$KEYCHAIN_NAME" $(security list-keychains -d user | sed 's/"//g')
        security default-keychain -s "$KEYCHAIN_NAME"

    - name: Import certificates
      run: |
        echo "${{ secrets.DISTRIBUTION_CERTIFICATE_B64 }}" | base64 -d > distribution.p12
        security import distribution.p12 -k "$KEYCHAIN_NAME" -P "${{ secrets.P12_CERT_PASSWORD }}" \
          -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/productbuild -T /usr/bin/xcodebuild

        echo "Available code signing identities:"
        security find-identity -p codesigning -v "$KEYCHAIN_NAME" | grep -i "Apple Distribution" || true

        # Set partition list to avoid prompts
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" "$KEYCHAIN_NAME"

    # - name: Import provisioning profile
    #   run: |
    #     PROV_PROFILE_PATH="$HOME/Library/MobileDevice/Provisioning Profiles"
    #     echo "Provisioning profile path: $PROV_PROFILE_PATH"
    #     mkdir -p "$PROV_PROFILE_PATH"
    #     echo "${{ secrets.SWITCHBOTAPPMOBILEPROVISION }}" | base64 -d > "$PROV_PROFILE_PATH/SWITCHBOTAPPMOBILEPROVISION.mobileprovision"
    #     echo "${{ secrets.SWITCHBOTWATCHKITEXTENSIONMOBILEPROVISION }}" | base64 -d > "$PROV_PROFILE_PATH/SWITCHBOTWATCHKITEXTENSIONMOBILEPROVISION.mobileprovision"
    #     echo "${{ secrets.SWITCHBOTWATCHKITMOBILEPROVISION }}" | base64 -d > "$PROV_PROFILE_PATH/SWITCHBOTWATCHKITMOBILEPROVISION.mobileprovision"
      
      
    - name: Build and Upload to TestFlight
      env:
        APPSTORE_API_KEY_ID: ${{ vars.APPSTORE_API_KEY_ID }}
        APPSTORE_ISSUER_ID: ${{ vars.APPSTORE_ISSUER_ID }}
      run: |
        export CODESIGN_ALLOCATE=$(xcrun -f codesign_allocate)
        export AUTH_KEY_PATH="$(pwd)/AuthKey_${{ vars.APPSTORE_API_KEY_ID }}.p8"
        echo "Path: $AUTH_KEY_PATH"
        echo "${{ secrets.APPSTORE_API_PRIVATE_KEY_B64 }}" | base64 -d > "$AUTH_KEY_PATH"

        chmod +x build-and-upload.sh
        ./build-and-upload.sh
      
    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: build/export_full.log

    - name: Clean up
      run: |
        security delete-keychain "$KEYCHAIN_NAME"
        rm -rf distribution.p12 provisioning.mobileprovision
